//
//  MovieListWorker.swift
//  ListProject
//
//  Created by Ruy de Ascenção Neto on 31/08/20.
//  Copyright (c) 2020 CocoaPods. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import RxSwift
protocol MovieListService{
    func getMovieList() -> Single<MovieListResponse>?
}

enum StandardRequestErrors: Error {
    case jsonConversionError
    case responseError
}
class MovieListWorker:MovieListService{
    func getMovieList() -> Single<MovieListResponse>? {
        
        guard let url = URL(string: "https://api.themoviedb.org/3/discover/movie?api_key=d430281e4dac653c899f6fd4d1af26f0") else {return nil}
        return   Single<MovieListResponse>.create{
            single in
            
            let task = URLSession.shared.dataTask(with: url){
                data,response,error in
                if error != nil  {
                    single(.error(StandardRequestErrors.responseError))
                }else{
                    do {
                        guard data != nil else {
                            single(.error(StandardRequestErrors.jsonConversionError))
                            return
                        }
                        let json = try JSONDecoder().decode(MovieListResponse.self, from: data!)
                      
                        single(.success(json))
                    } catch  {
                        print(error)
                        single(.error(StandardRequestErrors.jsonConversionError))
                        
                    }
                }
            }
            task.resume()
            return Disposables.create{
                task.suspend()
            }
            
        }
    }
    
  
}
